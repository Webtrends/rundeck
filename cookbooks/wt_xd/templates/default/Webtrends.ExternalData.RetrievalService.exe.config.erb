<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="plugins" type="Webtrends.ExternalData.Configuration.PluginConfigurationSection, Webtrends.ExternalData" />
    <section name="serviceBus" type="Webtrends.ServiceBus.Configuration.ServiceBusConfiguration, Webtrends.ServiceBus" />
    <section name="CassandraCluster" type="Webtrends.Cassandra.Core.CassandraClusterConfigSection, Webtrends.Cassandra.Core" />
    <section name="HBaseConfig" type="Webtrends.HBase.Core.HBaseConfigSection, Webtrends.HBase.Core" />
  </configSections>
  <!-- Start Cassandra settings -->
    <CassandraCluster KeySpace="Webtrends" ReportColumnFamily="<%= @report_column %>"
    MetaDataColumnFamily="<%= @metadata_column %>" ThriftPort="<%= @thrift_port %>" UseLegacy="false">
    <Nodes>
      <clear />
      <add Hostname="<%= @cass_host %>" />
    </Nodes>
  </CassandraCluster>
  <appSettings>
    <!-- This is the path to the log4net config file -->
    <add key="log4net.Config" value="Webtrends.ExternalData.RetrievalService.log4net.config" />
    <!-- If a 3rd party returns a message longer than this value (e.g. Facebook errors), then we truncate the value to this length.  This should match this varChar size in the wtMaster.thridParty[connection|configuration] -->
    <add key="max3rdPartyErrorMessageLength" value="350" />
    <add key="YouTubeProfileUri" value="https://www.youtube.com/profile"></add>
    <add key="YouTubeGoogleBaseLoginUri" value="https://accounts.google.com/ServiceLogin?uilel=3&amp;service=youtube&amp;passive=true&amp;continue=http%3A%2F%2Fwww.youtube.com%2Fsignin%3Faction_handle_signin%3Dtrue%26feature%3Dprofile%26nomobiletemp%3D1%26hl%3Den_US%26next%3D%252Fprofile&amp;hl=en_US&amp;ltmpl=sso"></add>
    <add key="YouTubeArtworkPath" value="//span[@class='profile-thumb']//img"></add>
    <add key="ChannelNamePath" value="//link[@rel='canonical']"></add>
    <add key="ApiVideoFeedBaseUri" value="https://gdata.youtube.com/feeds/api/videos?author=_YOUTUBE_AUTHOR&amp;orderby=published&amp;start-index=1&amp;max-results=_MAX_RESULTS&amp;v=2&amp;alt=json"></add>
    <add key="YouTubeReports" value="{    'reports': [        {            'dim': 'DAY',            'ord': 'DAY',            'id': 'YouTubeEngagement',            'whatType': 'VIDEO'        },        {            'dim': 'DAY',            'ord': 'DAY',            'id': 'YouTubeEarnings',            'whatType': 'VIDEO'        },        {            'dim': 'COUNTRY',            'ord': 'VIEWS',            'id': 'YouTubeVideosByCountries',            'whatType': 'VIDEO'        },        {            'dim': 'PLAYBACK_LOCATION',            'ord': 'VIEWS',            'id': 'YouTubeVideosByPlaybackLocations',            'whatType': 'VIDEO'        },        {            'dim': 'PLAYBACK_LOCATION',            'ord': 'VIEWS',            'id': 'YouTubePlaybackLocations',            'whatType': 'USER'        },        {            'dim': 'SHARING_SERVICE',            'ord': 'SHARINGS',            'id': 'SharingServiceReport',            'whatType': 'VIDEO'        },        {            'dim': 'TRAFFIC_SOURCE',            'ord': 'VIEWS',            'id': 'YouTubeVideosByTrafficSources',            'whatType': 'VIDEO'        },        {            'dim': 'TRAFFIC_SOURCE',            'ord': 'VIEWS',            'id': 'YouTubeTrafficSources',            'whatType': 'USER'        },        {            'dim': 'COUNTRY',            'ord': 'SUBSCRIBERS_NET_CHANGE',            'id': 'YouTubeCountries',            'whatType': 'USER'        }    ]}"></add>
    <add key="YouTubeReportMapping" value="{    'mappings': [        {            'sourceData': 'YouTubeEarnings',            'columns': [                'Views',                'Unique Viewers',                'Monetizable Views',                'Total Estimated Earnings',                'AFV Earnings',                'YouTube Earnings',                'YouTube Rental Earnings'            ],            'wtReportId': 'YouTubeEarnings',            'measureType': 'periodic',            'type': 'video'        },        {            'sourceData': 'YouTubeVideosByTrafficSources',            'columns': [                'Views'            ],            'wtReportId': 'YouTubeVideosByTrafficSources',            'measureType': 'dimensional',            'type': 'video'        },        {            'sourceData': 'YouTubeVideosByCountries',            'columns': [                'Views'            ],            'wtReportId': 'YouTubeVideosByCountries',            'measureType': 'dimensional',            'type': 'video'        },        {            'sourceData': 'YouTubeVideosByPlaybackLocations',            'columns': [                'Views'            ],            'wtReportId': 'YouTubeVideosByPlaybackLocations',            'measureType': 'dimensional',            'type': 'video'        },        {            'sourceData': 'YouTubeEngagement',            'columns': [                'Views',                'Unique Viewers',                'Subscribers Gained',                'Subscribers Lost',                'Likes',                'Dislikes',                'Favorites Added',                'Favorites Removed',                'Comments',                'Shares',                'Total Engagement'            ],            'wtReportId': 'YouTubeEngagement',            'measureType': 'periodic',            'type': 'video'        },        {            'sourceData': 'YouTubeCountries',            'columns': [                'Views',                'Subscribers Gained',                'Subscribers Lost',                'Likes',                'Dislikes',                'Favorites Added',                'Favorites Removed',                'Comments',                'Shares',                'Total Engagement'            ],            'wtReportId': 'YouTubeCountries',            'measureType': 'dimension',            'type': 'user'        },        {            'sourceData': 'YouTubeTrafficSources',            'columns': [                'Views'            ],            'wtReportId': 'YouTubeTrafficSources',            'measureType': 'dimension',            'type': 'user'        },        {            'sourceData': 'YouTubePlaybackLocations',            'columns': [                'Views'            ],            'wtReportId': 'YouTubePlaybackLocations',            'measureType': 'dimension',            'type': 'user'        }    ]}" />
    <add key="FBCommentsPerRequest" value="1000" />
    <add key="FBMaxComments" value="2000" />
  </appSettings> 
  <connectionStrings>
    <add name="wtMasterConnection" connectionString="Data Source=<%= @master_host %>;Initial Catalog=wtMaster;Integrated Security=True;Connect Timeout=300"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <!-- Start of Plugin Directory settings-->
  <plugins>
    <pluginDirectories>
      <add Directory="." />
    </pluginDirectories>
  </plugins>
  <!-- ServiceBus endpoint -->
  <serviceBus>
    <endpoints>
      <endpoint endpointIdentifier="xdrsmain@localhost" binding="mainBinding" name="Webtrends External Data Retrieval Service" description="" returnAddress="xdrsmain@localhost" monitorServiceAddress="discover" distributorAddress="" poisonMessageAddress="" maxMessageRetryCount="2" retryHandling="Drop" statusReportInterval="00:00:30" statusReportGracePeriod="00:01:00" numberOfWorkerThreads="100" maxRetries="4" incomingMessageLoggingLevel="None" outgoingMessageLoggingLevel="None" sendOnly="false">
        <profiler enabled="true" profilePipelineComponents="true" pipelineDirection="Both" />
        <!-- Register to handle the following messages -->
        <registeredMessages>
          <message messageType="Webtrends.ExternalData.Messages.EnumerationRequestMessage, Webtrends.ExternalData" enabled="true" local="true" />
          <message messageType="Webtrends.ExternalData.Messages.AcquireRawDataMessage, Webtrends.ExternalData" enabled="true" local="true" />
          <message messageType="Webtrends.ExternalData.Messages.AcquireReportsMessage, Webtrends.ExternalData" enabled="true" local="true" />
        </registeredMessages>
        <messageAssemblies>
          <assembly name="Webtrends.ExternalData" destinationAddress="xdrsmain" />
        </messageAssemblies>
        <messageHandlerAssemblies>
          <assembly name="Webtrends.ExternalData.RetrievalService" />
        </messageHandlerAssemblies>
        <statusProbes>
          <probe name="Available Memory" unitOfMeasurement="mb" canAggregate="false" dataType="Numeric" type="Webtrends.ServiceBus.Endpoint.Management.Monitoring.PerfCounterProbe, Webtrends.ServiceBus">
            <properties>
              <add name="Category" value="Memory" />
              <add name="Counter" value="Available MBytes" />
              <add name="Instance" value="" />
            </properties>
          </probe>
          <probe name="Avg. Processor Time" unitOfMeasurement="%" canAggregate="false" dataType="Numeric" type="Webtrends.ServiceBus.Endpoint.Management.Monitoring.PerfCounterProbe, Webtrends.ServiceBus">
            <properties>
              <add name="Category" value="Processor" />
              <add name="Counter" value="% Processor Time" />
              <add name="Instance" value="_Total" />
            </properties>
          </probe>
          <probe name="Messages in Queue" unitOfMeasurement="messages" canAggregate="true" dataType="Numeric" type="Webtrends.ServiceBus.Endpoint.Management.Monitoring.PerfCounterProbe, Webtrends.ServiceBus">
            <properties>
              <add name="Category" value="MSMQ Queue" />
              <add name="Counter" value="Messages in Queue" />
              <!-- The term 'localhost' will be converted to the machine name -->
              <add name="Instance" value="localhost\private$\xdrsmain" />
            </properties>
          </probe>
          <probe name="Avg. Processor Time (process)" unitOfMeasurement="%" canAggregate="false" dataType="Numeric" type="Webtrends.ServiceBus.Endpoint.Management.Monitoring.PerfCounterProbe, Webtrends.ServiceBus">
            <properties>
              <add name="Category" value="Process" />
              <add name="Counter" value="% Processor Time" />
              <add name="Instance" value="Webtrends.ExternalData.RetrievalService" />
            </properties>
          </probe>
          <probe name="Private Bytes (process)" unitOfMeasurement="bytes" canAggregate="false" dataType="Numeric" type="Webtrends.ServiceBus.Endpoint.Management.Monitoring.PerfCounterProbe, Webtrends.ServiceBus">
            <properties>
              <add name="Category" value="Process" />
              <add name="Counter" value="Private Bytes" />
              <add name="Instance" value="Webtrends.ExternalData.RetrievalService" />
            </properties>
          </probe>
          <probe name="Virtual Bytes (process)" unitOfMeasurement="bytes" canAggregate="false" dataType="Numeric" type="Webtrends.ServiceBus.Endpoint.Management.Monitoring.PerfCounterProbe, Webtrends.ServiceBus">
            <properties>
              <add name="Category" value="Process" />
              <add name="Counter" value="Virtual Bytes" />
              <add name="Instance" value="Webtrends.ExternalData.RetrievalService" />
            </properties>
          </probe>
        </statusProbes>
      </endpoint>
    </endpoints>
    <bindings>
      <msmqBinding name="mainBinding" purgeOnStartup="false" isTransactional="true" transactionTimeout="01:00:00" isolationLevel="Serializable" />
    </bindings>
  </serviceBus>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
</configuration>