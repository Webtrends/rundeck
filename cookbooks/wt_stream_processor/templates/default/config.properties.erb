# This is the base url for the CAM service
webtrends.cam.baseUrl = <%=@cam_url%>
# This is the url to the REST service for getting product provisioning
webtrends.cam.provisioningDetail=%%baseUrl%%/account/%%accountId%%/product/%%productId%%
# This is the url to the REST service for stream types
webtrends.cam.streamType=%%baseUrl%%/product/sapi/streamtype
# This is the url to the REST service for getting the blacklist
webtrends.cam.blacklist=%%baseUrl%%/product/sapi/blacklist
# This is the url to the REST service for getting the products
webtrends.cam.productDetail=%%baseUrl%%/product

# Are we monitoring at all
monitoring.enabled = <%= node['wt_monitoring']['monitoring_enabled'] %>
# should we publish to jmx
monitoring.jmx.enabled = <%= node['wt_monitoring']['jmx_enabled'] %>
# the prefix to append metrics being sent to graphite
monitoring.metric.prefix = <%= node['wt_monitoring']['metric_prefix'] %>

# Are health checks enabled
healthcheck.enabled=<%= node['wt_monitoring']['healthcheck_enabled'] %>
# This is for future use for having health checks bound to an alternative port
healthcheck.port=<%= node['wt_monitoring']['healthcheck_port'] %>

# Used for zmq connectivity
datacenter=<%= @datacenter %>
pod=<%= @pod %>
zookeeper.quorum=<%= @zookeeper_quorum  %>

usageConnString=jdbc:sqlserver://<%= @usagedbserver %>:1433;databaseName=<%= @usagedbname %>;user=<%= @usagedbuser %>;password=<%= @usagedbpwd %>;


# The is the root in Zookeeper where data for the api will be placed
stream.processor.zmq.znode.root=/StreamingZMQ
# This is the external address for the publish server for clients to connect to
stream.processor.zmq.znodepushnode=/analysis
# This is the external address for the pull server for clients to connect to
stream.processor.zmq.pull.address=tcp://*:1544
# Comma delimited list of valid domains to weed out invalid Zookeeper nodes coming from a Topology running on someone's VM
stream.processor.zk.valid.domains=staging.dmz,netiq.dmz

# A comma seperated list of routers to connect to for recieving
webtrends.network.binding.recieve = <%= @router_uri %>

# This is the number of elements, not the SIZE in bytes.
# Ideally, this will fit in L2 cache, most of our VM's tend to be aprox 15Mb
webtrends.network.binding.recieve.eventBufferSize = 128
webtrends.network.binding.recieve.eventHandlerThreads = 8