# Are we monitoring at all
monitoring.enabled = <%= node['wt_monitoring']['monitoring_enabled'] %>
# should we publish to jmx
monitoring.jmx.enabled = <%= node['wt_monitoring']['jmx_enabled'] %>
# the prefix to append metrics being sent to graphite
monitoring.metric.prefix = <%= node['wt_monitoring']['metric_prefix'] %>

# Should we push metrics to graphite
monitoring.graphite.enabled=<%= node[:wt_stream_processor][:graphite_enabled] %>
# What is the host of graphite
monitoring.graphite.host=<%= node[:wt_monitoring][:graphite_server] %>
# What port is graphite listening on
monitoring.graphite.port=<%= node[:wt_monitoring][:graphite_port] %>
# How often (minutes) should we flush metrics to graphite
monitoring.graphite.interval=<%= node[:wt_stream_processor][:graphite_interval] %>
# Should we include the JVM metrics when sending to graphite
monitoring.graphite.vmmetrics=<%= node[:wt_stream_processor][:graphite_vmmetrics] %>
# This is a regular expression for which metrics should be sent on to graphite. All metrics are still exposed via JMX or the metrics endpoint
monitoring.graphite.regex=<%= node[:wt_stream_processor][:graphite_regex] %>

# Are health checks enabled
healthcheck.enabled=<%= node['wt_monitoring']['healthcheck_enabled'] %>
# This is for future use for having health checks bound to an alternative port
healthcheck.port=<%= node['wt_stream_processor']['healthcheck_port'] %>


# Used for zmq connectivity
datacenter=<%= @datacenter %>
pod=<%= @pod %>
zookeeper.quorum=<%= @zookeeper_quorum  %>

# The is the root in Zookeeper where data for the api will be placed
stream.processor.zmq.znode.root=/StreamingZMQ
# This is the external address for the publish server for clients to connect to
stream.processor.zmq.znodepushnode=/analysis
# This is the external address for the pull server for clients to connect to
stream.processor.zmq.pull.address=tcp://*:1544
# Comma delimited list of valid domains to weed out invalid Zookeeper nodes coming from a Topology running on someone's VM
stream.processor.zk.valid.domains=netiq.dmz
# This is the number of puller threads
stream.processor.pullerthreads = 4
