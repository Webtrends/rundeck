#!/bin/sh

# Setup basic path information.
LOG_OUT="<%=File.join(@log_dir,"nimbus.out")%>"
LOG_ERR="<%=File.join(@log_dir,"nimbus.err")%>"
HOME_DIR="<%=@install_dir%>"

CMD="$HOME_DIR/bin/storm nimbus"

# Find top parent PID.
NIMBUS_PID_P=`ps -f -U storm |grep "bin/storm nimbus" |grep -v grep |awk '{ print $2 }'`

# Find sub-shell PID.
NIMBUS_PID_SH=`ps -f -U storm |grep "sh -c java" |grep "nimbus" |grep -v grep |awk '{ print $2 }'`

# Find the sub-shell's Java process PID.
NIMBUS_PID_JAVA=`ps -f -U storm |grep "java -server" |grep -v "sh -c java" |grep "nimbus" |grep -v grep |awk '{ print $2 }'`

# Check what the caller wants.
case "$1" in
    start)
        if [ "" = "$NIMBUS_PID_P" -a "" = "$NIMBUS_PID_SH" -a "" = "$NIMBUS_PID_JAVA" ]; then
            echo $CMD
            # Storm processes look for a conf/ directory relative
            # the processes start directory.
            cd $HOME_DIR
            # For compatibility with runit we cannot backgroud 
            # ourselves with a '&' at the end, though we do
            # need to exec.
            exec $CMD >$LOG_OUT 2>$LOG_ERR
        else 
            echo "Service already running"
            exit 1
        fi
        ;;
    stop)
        if [ "" = "$NIMBUS_PID_P" -a "" = "$NIMBUS_PID_SH" -a "" = "$NIMBUS_PID_JAVA" ]; then
            echo "Service not running, nothing to stop"
            exit 1
        else
            kill -9 $NIMBUS_PID_P $NIMBUS_PID_SH $NIMBUS_PID_JAVA
            exit 0
        fi
        ;;
    status)
        # Status is found via actual running processes, rather than
        # trusting a PID log file.
        if [ "" = "$NIMBUS_PID_P" -a "" = "$NIMBUS_PID_SH" -a "" = "$NIMBUS_PID_JAVA" ]; then
            echo "Not running"
            exit 1
        elif [ "" != "$NIMBUS_PID_P" -a "" != "$NIMBUS_PID_SH" -a "" != "$NIMBUS_PID_JAVA" ]; then
            echo "Running"
            exit 0
        else
            echo "Broken, some but not all processes are running"
            exit 2
        fi
        ;;
    *)
        echo "usage: daemon {start|stop|status}" >&2
        exit 1
        ;;
esac









