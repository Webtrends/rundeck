portfolio-harness-system {
    include "common"

    portfolio {
        http-port=8080

        monitoring {
            #Monitoring
            application.name = "Portfolio Harness"
            metric.prefix = workstations
            enabled = true
            jmx.enabled = true
            jmx.port = 9999
            graphite.enabled = false
            graphite.host = ""
            graphite.port = 2003
            graphite.interval = 5
            # Are health checks enabled
            healthcheck.enabled=true
        }
    }

    akka {
        event-handlers = ["com.webtrends.portfolio.logging.Logger"]
        loglevel=DEBUG
        log-config-on-start = off
        receive=on

        debug {
            receive = on
            autoreceive = on
            lifecycle = on
            event-stream = on
        }

        actor {
            serializers {
                proto = "akka.remote.serialization.ProtobufSerializer"
                java = "akka.serialization.JavaSerializer"
                bytes = "akka.serialization.ByteArraySerializer"
                blank = "akka.serialization.NullSerializer"
            }

            serialization-bindings {
                "[B" = bytes
            }

            provider = "akka.remote.RemoteActorRefProvider"
            deployment {
                /harness/tcpprocessor {
                    router = smallest-mailbox
                    nr-of-instances = 5
                }
                #/0mq-processor {
                #    router = smallest-mailbox
                #    nr-of-instances = 5
                #}
            }

            debug {
                autorecieve=on
            }
        }
        remote {
            log-sent-messages = on
            log-received-messages = on
            transport = "akka.remote.netty.NettyRemoteTransport"

            netty {
                hostname = "<%= node[:fqdn] %>"
                port = 2552
                write-buffer-high-water-mark = 1048576b
                write-buffer-low-water-mark = 0b
                send-buffer-size = 1048576b
                receive-buffer-size = 1048576b
            }
        }

        io {
            # In bytes, the size of the shared read buffer. In the span 0b..2GiB.
            read-buffer-size = 32KiB
            # Specifies how many ops are done between every descriptor selection
            select-interval = 100
            # Number of connections that are allowed in the backlog.
            # 0 or negative means that the platform default will be used.
            default-backlog = 1000
        }
    }

    spray {
        can {
            server {
                request-timeout=5s
            }
        }
    }
 }
