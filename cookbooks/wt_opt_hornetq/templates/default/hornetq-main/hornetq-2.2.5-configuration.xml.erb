<configuration xmlns="urn:hornetq"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="urn:hornetq /schema/hornetq-configuration.xsd">

   <paging-directory>${data.dir:../data}/paging</paging-directory>
   
   <bindings-directory>${data.dir:../data}/bindings</bindings-directory>
   
   <journal-directory>${data.dir:../data}/journal</journal-directory>
   
   <journal-min-files>10</journal-min-files>
   
   <large-messages-directory>${data.dir:../data}/large-messages</large-messages-directory>
   <message-counter-enabled>true</message-counter-enabled>
   <message-counter-sample-period>15000</message-counter-sample-period>
   <message-counter-max-day-history>7</message-counter-max-day-history> 


   
   <connectors>
      <connector name="netty">
         <factory-class>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory</factory-class>
         <param key="host"  value="${hornetq.remoting.netty.host:localhost}"/>
         <param key="port"  value="${hornetq.remoting.netty.port:5445}"/>
      </connector>
      
      <connector name="netty-throughput">
         <factory-class>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory</factory-class>
         <param key="host"  value="${hornetq.remoting.netty.host:localhost}"/>
         <param key="port"  value="${hornetq.remoting.netty.batch.port:5455}"/>
         <param key="batch-delay" value="50"/>
      </connector>
<% @config['ots']['pods'].each { |key, value| %>
      
      <connector name="ots-pod-<%=key%>">
         <factory-class>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory</factory-class>
         <param key="host"  value="<%=value[0]%>"/>
         <param key="port"  value="5445"/>
      </connector>

<% } %>

   </connectors>

   <acceptors>
      <acceptor name="netty">
         <factory-class>org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory</factory-class>
         <param key="host"  value="0.0.0.0"/>
         <param key="port"  value="${hornetq.remoting.netty.port:5445}"/>
      </acceptor>
      
      <acceptor name="netty-throughput">
         <factory-class>org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory</factory-class>
         <param key="host"  value="${hornetq.remoting.netty.host:localhost}"/>
         <param key="port"  value="${hornetq.remoting.netty.batch.port:5455}"/>
         <param key="batch-delay" value="50"/>
         <param key="direct-deliver" value="false"/>
      </acceptor>
   </acceptors>

   <security-settings>
      <security-setting match="#">
         <permission type="createNonDurableQueue" roles="guest"/>
         <permission type="deleteNonDurableQueue" roles="guest"/>
         <permission type="consume" roles="guest"/>
         <permission type="send" roles="guest"/>
      </security-setting>
   </security-settings>

   <address-settings>
      <!--default for catch all-->
      <address-setting match="jms.topic.#">
         <max-delivery-attempts>5</max-delivery-attempts>
         <redistribution-delay>10000</redistribution-delay>
         <redelivery-delay>5000</redelivery-delay>
         <max-size-bytes>60485760</max-size-bytes>
         <page-size-bytes>10485760</page-size-bytes>
         <address-full-policy>DROP</address-full-policy>
      </address-setting>

      <address-setting match="jms.queue.#">
         <max-delivery-attempts>5</max-delivery-attempts>
         <redistribution-delay>10000</redistribution-delay>
         <redelivery-delay>60000</redelivery-delay>
         <max-size-bytes>20485760</max-size-bytes>
         <page-size-bytes>10485760</page-size-bytes>
         <address-full-policy>PAGE</address-full-policy>
      </address-setting>
   </address-settings>
    
   <queues>   
      <queue name="jms.topic.WOPEvents">
        <address>jms.topic.WOPEvents</address>
        <durable>false</durable>
      </queue>
       
      <queue name="jms.queue.OTSEventQueue">
        <address>jms.queue.OTSEventQueue</address>
        <durable>true</durable>
      </queue>
      
      <queue name="jms.queue.RASEventQueue">
        <address>jms.queue.RASEventQueue</address>
        <durable>true</durable>
      </queue>
      
      <queue name="jms.queue.WASEventQueue">
        <address>jms.queue.WASEventQueue</address>
        <durable>true</durable>
      </queue>
      
      <queue name="jms.queue.JOSEventQueue">
        <address>jms.queue.JOSEventQueue</address>
        <durable>true</durable>
      </queue>

      <queue name="jms.queue.HeartbeatEventQueue">
        <address>jms.queue.HeartbeatEventQueue</address>
        <durable>false</durable>
      </queue>

      <queue name="jms.queue.QueueService">
        <address>jms.queue.QueueService</address>
        <durable>true</durable>
      </queue>

      <queue name="jms.queue.WOPEventQueue">
        <address>jms.queue.WOPEventQueue</address>
        <durable>false</durable>
      </queue>

      <!-- Forward only core queues used for divert -->

<% @config['ots']['pods'].keys.each { |key| %>

      <% if @config['ots']['pods'][key].size > 0 then %>
      <queue name="jms.queue.OTS-<%=key%>-PkgForward">
        <address>jms.queue.OTS-<%=key%>-PkgForward</address>
        <durable>true</durable>
      </queue>
      
      <queue name="jms.queue.OTS-<%=key%>-Forward">
        <address>jms.queue.OTS-<%=key%>-Forward</address>
        <durable>false</durable>
      </queue>
      <% end %>
<% } %>
      
   </queues>

  <diverts>
<% @config['ots']['pods'].each_key { |key| %>

      <% if @config['ots']['pods'][key].size > 0 then %>
      <divert name="ots-<%=key%>-pkg-divert">                 
         <address>jms.queue.OTSEventQueue</address>
         <forwarding-address>jms.queue.OTS-<%=key%>-PkgForward</forwarding-address>         
         <exclusive>true</exclusive>
      </divert>

      <divert name="ots-<%=key%>-divert">                 
         <address>jms.topic.WOPEvents</address>
         <forwarding-address>jms.queue.OTS-<%=key%>-Forward</forwarding-address>         
         <filter string="ALL = TRUE OR OTS = TRUE"/>
         <transformer-class-name>
            org.hornetq.core.server.cluster.impl.AddExpirationTimeTransformer
         </transformer-class-name> 
         <exclusive>false</exclusive>
      </divert>
    <% end %>
<% } %>      

  </diverts>

  <bridges>
<% @config['ots']['pods'].each_key { |key| %>
      <% if @config['ots']['pods'][key].size > 0 then %>
       <bridge name="ots-<%=key%>-bridge">
          <queue-name>jms.queue.OTS-<%=key%>-Forward</queue-name>
          <forwarding-address>jms.topic.WOPEvents</forwarding-address>
          <retry-interval>5000</retry-interval>
          <reconnect-attempts>-1</reconnect-attempts>
          <use-duplicate-detection>false</use-duplicate-detection>
          <static-connectors>
            <connector-ref>ots-pod-<%=key%></connector-ref>
          </static-connectors>
       </bridge>
       <bridge name="ots-<%=key%>-pkg-bridge">
          <queue-name>jms.queue.OTS-<%=key%>-PkgForward</queue-name>
          <forwarding-address>jms.queue.OTSEventQueue</forwarding-address>
          <retry-interval>5000</retry-interval>
          <reconnect-attempts>-1</reconnect-attempts>
          <use-duplicate-detection>false</use-duplicate-detection>
          <static-connectors>
            <connector-ref>ots-pod-<%=key%></connector-ref>
          </static-connectors>
       </bridge>
    <% end %>
<% } %>
   </bridges>
</configuration>
